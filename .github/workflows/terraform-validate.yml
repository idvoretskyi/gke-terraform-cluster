name: Terraform Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  TF_VERSION: "1.9.0"

jobs:
  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'
        skip_install: false

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init -backend=false

    - name: Debug - Check external data sources
      run: |
        echo "Current user: $(whoami)"
        echo "Gcloud version: $(gcloud version 2>/dev/null || echo 'gcloud not found')"
        echo "Gcloud project: $(gcloud config get-value project 2>/dev/null || echo 'no project set')"
        echo "Gcloud region: $(gcloud config get-value compute/region 2>/dev/null || echo 'no region set')"

    - name: Terraform Validate
      run: terraform validate -no-color

  terraform-security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform
        output_format: sarif
        output_file_path: reports/results.sarif
        quiet: true
        soft_fail: true

    - name: Upload Checkov results to GitHub Advanced Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: reports/results.sarif

  terraform-docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Generate Terraform docs
      uses: terraform-docs/gh-actions@main
      with:
        working-dir: .
        output-file: TERRAFORM_DOCS.md
        output-method: inject
        git-push: false

    - name: Check documentation changes
      id: docs-check
      run: |
        if [[ `git status --porcelain` ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Documentation needs to be updated"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "Documentation is already up to date"
        fi

    - name: Commit and push documentation updates (main branch only)
      if: steps.docs-check.outputs.changes == 'true' && github.ref == 'refs/heads/main'
      run: |
        echo "Committing documentation updates..."
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add TERRAFORM_DOCS.md
        git commit -m "docs: update Terraform documentation [skip ci]"
        git push

    - name: Comment on PR with documentation diff (PR only)
      if: steps.docs-check.outputs.changes == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          const diff = execSync('git diff TERRAFORM_DOCS.md', { encoding: 'utf-8' });
          
          const comment = `## üìù Terraform Documentation Update Required
          
          The Terraform documentation needs to be updated. Please run the following command locally and commit the changes:
          
          \`\`\`bash
          terraform-docs --output-file TERRAFORM_DOCS.md --output-method inject .
          \`\`\`
          
          <details>
          <summary>üìã Documentation Diff</summary>
          
          \`\`\`diff
          ${diff}
          \`\`\`
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Fail if documentation is outdated on PR
      if: steps.docs-check.outputs.changes == 'true' && github.event_name == 'pull_request'
      run: |
        echo "‚ùå Documentation is outdated. Please update the documentation and commit the changes."
        exit 1